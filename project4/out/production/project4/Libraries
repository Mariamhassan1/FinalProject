#add class :-
ğŸ’¡javax.swing.* : this package contains painting tools that can be used in the GUI like frames, buttons, panels, labels and more..(the star is to call all the classes in the package)
ğŸ’¡java.awt.* : It is an old library (AWT: Abstract Window Toolkit), it contains tools for designing the GUI's tools like color, font, dimension and flowLayOut and more..
ğŸ’¡java.awt.event.WindowAdapter : WindowAdapter is a class from the package java.awt.event, it helps to make events on the window screen(close,open,maximize...)
ğŸ’¡java.awt.event.WindowEvent : WindowEvent is a class from the package java.awt.event, it relies on windowAdapter and windowListeners, it handle the events that can be done on the window like ( close window, oper window, maximize window and more ), it must know the happened event to call the right code and do changes.
ğŸ’¡java.util.regex.Pattern : Pattern is a class from the package java.util.regex, it helps to make templates to check the texts using the class matcher
ğŸ’¡java.util.regex.Matcher : Matcher is a class from the package java.util.regex, it helps to check if the text patterns

#delete class :-
ğŸ’¡java.awt.event.FocusAdapter : FocusAdapter is a class in the package java.awt.event to make changes on the tool that has the focus
ğŸ’¡java.awt.event.FocusEvent : FocusEvent is a class in the package java.awt.event to get more information about the events that had been done on the tool that has the focus

#CustomerSorter class :-
ğŸ’¡java.io.* : (io : input/output) it is the library that helps to read and write from the --data bases-- ( BufferReader, BufferWriter, IOException)
ğŸ’¡java.util.* : it is the most important library, it contains all the --data structures-- (queue, stack, hash table, hash map, arrayList and more)

#EmailSender :-
ğŸ’¡java.util.Properties : helps to save the data and read them as couples ( the key = the value )
ğŸ’¡javax.mail.* : to send and receive emails
ğŸ’¡javax.mail.internet.* : it is a sub library that handle the email's details

#customerManagementSysem :-
ğŸ’¡javax.swing.table.DefaultTableModel : to make changes on the hashTable
ğŸ’¡javax.swing.table.DefaultTableCellRenderer : to design the cells inside the table and how to show them
ğŸ’¡javax.swing.table.JTableHeader : to handle the titles of each columns in the table
ğŸ’¡java.awt.event.MouseAdapter : we use it to adapt with the mouse events ( click, hover, drag and release)
ğŸ’¡java.awt.event.MouseEvent : it relies on mouseListener and mouseAdapter, how did the event done, how many clicks, which button (right/left mouse click)

#customerManager :-
ğŸ’¡ import java.util.List : it is an enter face acts an elements in the list, and it is a base of the lists like arrayList